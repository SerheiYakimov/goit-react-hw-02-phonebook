{"version":3,"sources":["components/Form/Form.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Form","state","name","number","idName","uuid","idNumber","handleChange","e","target","value","setState","handleSubmit","preventDefault","contact","id","props","addNewContact","resetForm","this","onSubmit","htmlFor","type","onChange","pattern","title","required","Component","Filter","ContactListItem","onDeleteContact","onClick","ContactList","findContact","map","PropType","PropsType","func","isRequired","string","PropsTypes","App","contacts","filter","find","el","alert","prevState","handleFilter","normalizeFilter","toLowerCase","length","includes","deleteContact","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0df95316.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport PropsType from 'prop-types';\n\nexport class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  idName = uuid();\n  idNumber = uuid();\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    const contact = {\n      name,\n      number,\n      id: uuid(),\n    };\n\n    this.props.addNewContact(contact);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { idName, idNumber, handleChange, handleSubmit } = this;\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={handleSubmit}>\n        <label htmlFor={idName}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={idName}\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor={idNumber}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={idNumber}\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\n\nForm.PropType = {\n  onSubmit: PropsType.func.isRequired,\n  onChange: PropsType.func.isRequired,\n  }","import PropsType from 'prop-types';\n\nexport function Filter({ value, onChange }) {\n  return (\n    <div>\n      <h3>Find contacts by name:</h3>\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </div>\n  );\n}\n\nFilter.PropsType = {\n  value: PropsType.string,\n  onChange: PropsType.func.isRequired,\n}","import PropsType from 'prop-types';\n\nexport function ContactListItem({ id, name, number, onDeleteContact }) {\n  return (\n    <li>\n      <p>\n        {name}:<span>{number}</span>\n      </p>\n      <button type=\"submit\" onClick={() => onDeleteContact(id)}>Delete</button>\n    </li>\n  );\n}\n\nContactListItem.PropsTypes = {\n  id: PropsType.number.isRequired,\n  name: PropsType.string.isRequired,\n  number: PropsType.number.isRequired,\n  onDeleteContact: PropsType.func.isRequired,\n}\n","import PropsType from 'prop-types';\n\nimport { ContactListItem } from \"../ContactListItem/ContactListItem\";\n\nexport function ContactList({ findContact, onDeleteContact }) {\n  return (\n    <ul>\n      {findContact().map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.PropsType = {\n  id: PropsType.number.isRequired,\n  name: PropsType.string.isRequired,\n  number: PropsType.number.isRequired,\n  onDeleteContact: PropsType.func.isRequired,\n}\n","import { Component } from \"react\";\nimport \"./App.css\";\n\nimport { Form } from \"./components/Form/Form\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = (contact) => {\n    if (this.state.contacts.find((el) => el.name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n    } else {\n      this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, contact],\n        };\n      });\n    }\n  };\n\n  handleFilter = (e) => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  findContact = () => {\n    const normalizeFilter = this.state.filter.toLowerCase();\n    if (this.state.filter.length > 0) {\n      return this.state.contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(normalizeFilter)\n      );\n    } else {\n      return this.state.contacts;\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((el) => el.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const { addNewContact, handleFilter, findContact, deleteContact } = this;\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <h2>Phonebook</h2>\n          <Form addNewContact={addNewContact} />\n          <div>\n            <h2>Contacts</h2>\n            <Filter value={filter} onChange={handleFilter} />\n            <ContactList\n              findContact={findContact}\n              onDeleteContact={deleteContact}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}